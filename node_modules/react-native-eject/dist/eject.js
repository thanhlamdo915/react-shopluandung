"use strict";
/**
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * @format
 */
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
// recovered from https://github.com/react-native-community/cli/pull/275
const path_1 = __importDefault(require("path"));
const fs_1 = __importDefault(require("fs"));
const cli_tools_1 = require("@react-native-community/cli-tools");
const copyProjectTemplateAndReplace_js_1 = __importDefault(require("./copyProjectTemplateAndReplace.js"));
/**
 * The eject command re-creates the `android` and `ios` native folders. Because native code can be
 * difficult to maintain, this new script allows an `app.json` to be defined for the project, which
 * is used to configure the native app.
 *
 * The `app.json` config may contain the following keys:
 *
 * - `name` - The short name used for the project, should be TitleCase
 * - `displayName` - The app's name on the home screen
 */
function eject() {
    const doesIOSExist = fs_1.default.existsSync(path_1.default.resolve('ios'));
    const doesAndroidExist = fs_1.default.existsSync(path_1.default.resolve('android'));
    if (doesIOSExist && doesAndroidExist) {
        cli_tools_1.logger.error('Both the iOS and Android folders already exist! Please delete `ios` and/or `android` ' +
            'before ejecting.');
        process.exit(1);
    }
    let appConfig = null;
    try {
        appConfig = require(path_1.default.resolve('app.json'));
    }
    catch (e) {
        cli_tools_1.logger.error('Eject requires an `app.json` config file to be located at ' +
            `${path_1.default.resolve('app.json')}, and it must at least specify a \`name\` for the project ` +
            "name, and a `displayName` for the app's home screen label.");
        process.exit(1);
    }
    const appName = appConfig.name;
    if (!appName) {
        cli_tools_1.logger.error('App `name` must be defined in the `app.json` config file to define the project name. ' +
            'It must not contain any spaces or dashes.');
        process.exit(1);
    }
    const displayName = appConfig.displayName;
    if (!displayName) {
        cli_tools_1.logger.error('App `displayName` must be defined in the `app.json` config file, to define the label ' +
            'of the app on the home screen.');
        process.exit(1);
    }
    const templateOptions = { displayName };
    if (!doesIOSExist) {
        cli_tools_1.logger.info('Generating the iOS folder.');
        (0, copyProjectTemplateAndReplace_js_1.default)(path_1.default.resolve('node_modules', 'react-native', 'template', 'ios'), path_1.default.resolve('ios'), appName, templateOptions);
    }
    if (!doesAndroidExist) {
        cli_tools_1.logger.info('Generating the Android folder.');
        (0, copyProjectTemplateAndReplace_js_1.default)(path_1.default.resolve('node_modules', 'react-native', 'template', 'android'), path_1.default.resolve('android'), appName, templateOptions);
    }
}
exports.default = {
    name: 'eject',
    description: 'Re-create the iOS and Android folders and native code',
    func: eject(),
    options: [],
};
